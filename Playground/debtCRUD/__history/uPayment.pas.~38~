unit uPayment;

interface

uses
  Winapi.Windows, Winapi.Messages, System.Variants, System.Classes,
  Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Vcl.Grids, Vcl.DBGrids,
  Vcl.StdCtrls, Vcl.ExtCtrls;

type
  TfrmPayment = class(TForm)
    edtDebtId: TLabeledEdit;
    edtDebtPaidValue: TLabeledEdit;
    btnPay: TButton;
    DBGrid1: TDBGrid;
    procedure btnPayClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmPayment: TfrmPayment;

implementation

uses
  System.SysUtils, dm, interfaces.debt, classes.debt;

{$R *.dfm}

procedure TfrmPayment.btnPayClick(Sender: TObject);
var
  debtPaidValue, debtValue, newDebt: double;
  formatControl: string;
  debt: iDebt;
begin
  debt := TDebt.New;

  try
    debt.id(StrToInt(edtDebtId.Text));
    formatControl := FormatFloat('0.##', StrToFloat(edtDebtPaidValue.Text));
    debtPaidValue := StrToFloat(formatControl);
  except
    ShowMessage('Digite um código e/ou valor válido');
    exit;
  end;

  with DataModule1 do
  begin
    qr.First;
    while not qr.EoF do
    begin
      if (debt.id = qr.FieldByName('id').AsInteger) then
      begin
        if not(qr.FieldByName('debtStatus').AsBoolean) then
        begin
          debtValue := qr.FieldByName('debt').AsFloat;
          debt.debt(debtValue - debtPaidValue);
          break;
        end
        else
        begin
          ShowMessage('A conta já está paga');
          exit;
        end;
      end;
      qr.Next;
    end;

    if (Length(qr.FieldByName('debtorName').AsString) <> 0) then
    begin
      if (debt.debt <= 0) then
      begin
        debt.debt(0);
        debt.debtStatus(True);
      end
      else
      begin
        debt.debtStatus(True);
      end;

      qr.ExecSQL('UPDATE debts ' +
        'SET debt = :newDebt, debtStatus = :debtStatus ' +
        'WHERE debts.id = :debtID', [debt.debt, debt.debtStatus, debt.id]);

      qr.Open('SELECT * FROM debts');
    end
    else
      ShowMessage('ID inválido!');

    qr.First;
  end;
end;

end.
