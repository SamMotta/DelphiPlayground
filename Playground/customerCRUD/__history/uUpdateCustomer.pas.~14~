unit uUpdateCustomer;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls,
  uDTMConnection;

type
  TfrmUpdateCustomer = class(TForm)
    ledtNome: TLabeledEdit;
    ledtEndereco: TLabeledEdit;
    ledtCpfCnpj: TLabeledEdit;
    ledtDivida: TLabeledEdit;
    btnSubmit: TButton;
    btnSubmitSearch: TButton;
    ledtClientID: TLabeledEdit;
    procedure btnSubmitSearchClick(Sender: TObject);
    procedure btnSubmitClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmUpdateCustomer: TfrmUpdateCustomer;
  clientID: integer;

implementation

{$R *.dfm}

procedure TfrmUpdateCustomer.btnSubmitClick(Sender: TObject);
var
  nome: string;
  endereco: string;
  cpfCnpj: string;
  divida: integer;
begin
  nome := ledtNome.Text;
  endereco := ledtEndereco.Text;
  cpfCnpj := ledtCpfCnpj.Text;
  divida := StrToInt(ledtDivida.Text);

  with dtmConnection do
  begin
    if (clientID > 0) then
    begin
      qr.ExecSQL('UPDATE clients ' +
        'SET nome = :nome, endereco = :endereco, cpfCnpj = :cpfCnpj, divida = :divida'
        + 'WHERE clients.id = :clientID', [nome, endereco, cpfCnpj, divida,
        clientID]);

      qr.Open('SELECT * FROM clients');
    end
    else
      ShowMessage('O Identificador fornecido não é válido!');
  end;
end;

procedure TfrmUpdateCustomer.btnSubmitSearchClick(Sender: TObject);
var
  nome: string;
  endereco: string;
  cpfCnpj: string;
  divida: integer;
begin
  clientID := StrToInt(ledtClientID.Text);

  with dtmConnection do
  begin
    while not qr.Eof do
    begin
      if (clientID = qr.FieldByName('id').AsInteger) then
      begin
        nome := qr.FieldByName('nome').AsString;
        endereco := qr.FieldByName('endereco').AsString;
        cpfCnpj := qr.FieldByName('cpfCnpj').AsString;
        divida := qr.FieldByName('divida').AsInteger;

        break;
      end;
      qr.Next;
    end;
  end;

  if (length(nome) <> 0) then
  begin
    ledtNome.Text := nome;
    ledtEndereco.Text := endereco;
    ledtCpfCnpj.Text := cpfCnpj;
    ledtDivida.Text := divida.ToString;

    ledtNome.ReadOnly := False;
    ledtEndereco.ReadOnly := False;
    ledtCpfCnpj.ReadOnly := False;
    ledtDivida.ReadOnly := False;
  end
  else
  begin
    ShowMessage('Não há algum cliente com este ID!');
    clientID := -1;

    ledtNome.ReadOnly := True;
    ledtEndereco.ReadOnly := True;
    ledtCpfCnpj.ReadOnly := True;
    ledtDivida.ReadOnly := True;
  end;
end;

end.
